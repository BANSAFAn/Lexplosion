name: CI — Linux build (dotnet SDK projects)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-linux:
    name: Build (Linux, dotnet SDK projects)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 6 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Restore and build SDK-style projects
        run: |
          set -e
          echo "Finding SDK-style projects (look for '<Project Sdk' in .csproj)..."
          sdk_projects=$(grep -l "<Project .*Sdk=" -R --include="*.csproj" || true)
          if [ -z "$sdk_projects" ]; then
            echo "No SDK-style projects found."
            exit 0
          fi
          echo "SDK projects found:"
          echo "$sdk_projects"
          for p in $sdk_projects; do
            # skip projects that reference legacy .NET Framework projects which cannot be built on Linux/macOS
            if grep -q "<ProjectReference.*Lexplosion.Core" "$p" || grep -q "<ProjectReference.*Lexplosion.UI.WPF" "$p"; then
              echo "Skipping $p — references legacy .NET Framework projects"
              continue
            fi
            echo "dotnet restore $p"
            dotnet restore "$p"
            echo "dotnet build $p"
            dotnet build "$p" --configuration Release
          done

      - name: Publish SDK-style projects for linux-x64
        run: |
          set -e
          sdk_projects=$(grep -l "<Project .*Sdk=" -R --include="*.csproj" || true)
          mkdir -p publish/linux
          for p in $sdk_projects; do
            if grep -q "<ProjectReference.*Lexplosion.Core" "$p" || grep -q "<ProjectReference.*Lexplosion.UI.WPF" "$p"; then
              echo "Skipping publish for $p — references legacy projects"
              continue
            fi
            name=$(basename "$p" .csproj)
            echo "Publishing $p -> publish/linux/$name"
            dotnet publish "$p" -c Release -r linux-x64 --self-contained false -o "publish/linux/$name"
          done

      - name: Pack Linux artifact if exists
        run: |
          set -e
          if [ -d publish/linux ] && [ "$(ls -A publish/linux)" ]; then
            cd publish
            zip -r lexplosion-linux.zip linux || true
            ls -la lexplosion-linux.zip || true
          else
            echo "No publish/linux contents — skipping pack"
          fi

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: lexplosion-linux
          path: publish/lexplosion-linux.zip

      - name: Run tests if test project exists and is compatible
        run: |
          set -e
          TEST_PROJ=src/Lexplosion.Tests/Lexplosion.Tests.csproj
          if [ -f "$TEST_PROJ" ]; then
            if grep -q "<ProjectReference.*Lexplosion.Core" "$TEST_PROJ" || grep -q "<ProjectReference.*Lexplosion.UI.WPF" "$TEST_PROJ"; then
              echo "Skipping tests on Linux — test project references legacy .NET Framework projects"
              exit 0
            fi
            dotnet test "$TEST_PROJ" --configuration Release
          else
            echo "No test project found"
          fi
