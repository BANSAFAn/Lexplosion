<local:NightWorldUserViewBase
    x:Class="Lexplosion.WPF.NewInterface.ViewComponents.Users.NightWorldUser"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Lexplosion.WPF.NewInterface.Controls"
    xmlns:converters="clr-namespace:Lexplosion.WPF.NewInterface.Core.Converters"
    xmlns:core="clr-namespace:Lexplosion.WPF.NewInterface.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:lexplosion="clr-namespace:Lexplosion;assembly=Lexplosion.Core"
    xmlns:local="clr-namespace:Lexplosion.WPF.NewInterface.ViewComponents.Users"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Border
        x:Name="PART_BodyBorder"
        MinWidth="300"
        MinHeight="64"
        MaxWidth="300"
        Padding="16,13"
        HorizontalAlignment="Stretch"
        Background="{DynamicResource FriendSolidColorBrush}"
        BorderBrush="{DynamicResource FriendBorderSolidColorBrush}"
        BorderThickness="1"
        CornerRadius="5">
        <Grid HorizontalAlignment="Stretch">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button
                Width="38"
                Height="38"
                Margin="0,0,8,0"
                Cursor="Hand">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <Grid Width="38" Height="38">
                            <!--  Avatar  -->
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Border
                                    x:Name="AvatarBorder"
                                    Width="38"
                                    Height="38"
                                    Background="{Binding AvatarUrl, Converter={converters:ImageSourceNullValidateConverter}}"
                                    CornerRadius="2" />

                                <controls:CircleLoader
                                    x:Name="AvatarLoader"
                                    Width="16"
                                    Height="16"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    BlurTarget="{Binding ElementName=AvatarBorder}"
                                    IsActive="{Binding AvatarUrl, Converter={converters:IsValueNullConverter}}" />
                            </Grid>

                            <!--<Border
                                        x:Name="IconBorder"
                                        CornerRadius="5"
                                        Visibility="Collapsed">

                                        <Border.Background>
                                            <SolidColorBrush Opacity="0.3" Color="Black" />
                                        </Border.Background>

                                        <Viewbox
                                            Height="24"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">
                                            <Path
                                                extensions:PathExtensions.StringKeyData="Profile"
                                                Fill="{DynamicResource CheckBoxMarkSolidColorBrush}"
                                                Stretch="Fill" />
                                        </Viewbox>
                                    </Border>-->
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!--  TODO: Smooth Animation  -->
                            <!--<Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="AvatarBorder" Property="Effect">
                                            <Setter.Value>
                                                <BlurEffect />
                                            </Setter.Value>
                                        </Setter>

                            -->
                            <!--  TODO: Для профиля пользователей вернуть на Visible  -->
                            <!--
                                        <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                                    </Trigger>

                                    <DataTrigger Binding="{Binding AvatarUrl}" Value="{x:Null}">
                                        <Setter TargetName="AvatarBorder" Property="Background">
                                            <Setter.Value>
                                                <ImageBrush ImageSource="pack://Application:,,,/Assets/images/icons/non_image.png" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <StackPanel Grid.Column="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock
                        x:Name="PART_NicknameTB"
                        FontSize="14"
                        FontWeight="Medium"
                        Foreground="{DynamicResource PrimaryForegroundSolidColorBrush}"
                        Text="{Binding Login}" />

                    <Border
                        x:Name="PART_StatusIndicator"
                        Width="10"
                        Height="10"
                        Margin="8,1,0,0"
                        BorderBrush="{DynamicResource SepSolidColorBrush}"
                        BorderThickness="1"
                        CornerRadius="10">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ActivityStatus.Online}">
                                        <Setter Property="Background" Value="#009834" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ActivityStatus.Offline}">
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ActivityStatus.NotDisturb}">
                                        <Setter Property="Background" Value="Orange" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ActivityStatus.InGame}">
                                        <Setter Property="Background" Value="{DynamicResource ActivitySolidColorBrush}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </StackPanel>

                <Grid Margin="0,2,0,0">
                    <!--  Current Activity  -->
                    <TextBlock
                        x:Name="PART_StatusTB"
                        Margin="0,2,0,0"
                        FontSize="12"
                        FontWeight="Medium"
                        Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}"
                        TextTrimming="CharacterEllipsis">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ActivityStatus.Online}">
                                        <Setter Property="Text" Value="{DynamicResource Online}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ActivityStatus.Offline}">
                                        <Setter Property="Text" Value="{DynamicResource Offline}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ActivityStatus.NotDisturb}">
                                        <Setter Property="Text" Value="{DynamicResource NotDisturb}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ActivityStatus.InGame}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <TextBlock
                        FontSize="10"
                        FontWeight="Medium"
                        Foreground="{DynamicResource SecondaryForegroundSolidColorBrush}"
                        TextTrimming="CharacterEllipsis">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static lexplosion:ActivityStatus.InGame}">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>

                        <Run FontSize="10" Text="{DynamicResource PlayingIn}" />
                        <Run FontSize="10" Text="{Binding RunningClientName, Mode=OneWay}" />
                    </TextBlock>
                </Grid>
            </StackPanel>

            <core:If Grid.Column="2" Condition="{Binding HasFriendRequestSent}">
                <core:If.False>
                    <controls:AdvancedButton
                        Width="32"
                        Height="32"
                        HorizontalContentAlignment="Center"
                        Command="{Binding ViewModelDataContext.SendFriendRequestCommand, RelativeSource={RelativeSource AncestorType={x:Type local:NightWorldUserViewBase}}}"
                        CommandParameter="{Binding}"
                        Cursor="Hand"
                        Foreground="{DynamicResource ActivitySolidColorBrush}"
                        IconData="{DynamicResource PDAddPerson}"
                        IconPadding="0,8"
                        Style="{StaticResource HalfOpacityAdvancedButton}"
                        ToolTip="{DynamicResource SendFriendRequest}" />
                </core:If.False>
                <core:If.True>
                    <controls:AdvancedButton
                        Width="32"
                        Height="32"
                        HorizontalContentAlignment="Center"
                        Command="{Binding ViewModelDataContext.CancelFriendRequestCommand, RelativeSource={RelativeSource AncestorType={x:Type local:NightWorldUserViewBase}}}"
                        CommandParameter="{Binding}"
                        Cursor="Hand"
                        Foreground="{DynamicResource ActivitySolidColorBrush}"
                        IconData="{DynamicResource PDRemovePerson}"
                        IconPadding="0,8"
                        Style="{StaticResource HalfOpacityAdvancedButton}"
                        ToolTip="{DynamicResource CancelFriendRequest}" />
                </core:If.True>
            </core:If>
        </Grid>
    </Border>
</local:NightWorldUserViewBase>
