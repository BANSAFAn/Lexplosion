<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style
        x:Key="Pattern"
        BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
        TargetType="{x:Type Button}" />

    <Style
        x:Key="HeaderButton"
        BasedOn="{StaticResource Pattern}"
        TargetType="{x:Type Button}">
        <Setter Property="Width" Value="28" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="LibraryAddBtn"
        BasedOn="{StaticResource Pattern}"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontFamily" Value="pack://application:,,,/assets/fonts/#Casper Bold" />
        <Setter Property="Foreground" Value="#eee" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="Transparent"
                        BorderBrush="Gray"
                        BorderThickness="1"
                        CornerRadius="10">
                        <Grid ShowGridLines="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="120" />
                                <ColumnDefinition Width="500" />
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0">
                                <Border
                                    x:Name="Border"
                                    BorderBrush="Gray"
                                    BorderThickness="0,0,1,0">
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontSize="50"
                                        Text="+" />
                                </Border>
                            </Grid>
                            <Grid Grid.Column="1">
                                <ContentPresenter
                                    Margin="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TagStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="TextBlock.SnapsToDevicePixels" Value="False" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="2,0,2,2" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="#242527"
                        BorderBrush="Transparent"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ContentPresenter
                            Margin="10,0,10,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="5"
                                Opacity="0.10"
                                Color="Black" />
                        </Border.Effect>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FolderBrowerButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="7,7,7,7">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource BrandSolidColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#1EAFDD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="DefaultBrandColorButton"
        BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
        TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{DynamicResource BrandSolidColorBrush}"
                        BorderThickness="0"
                        CornerRadius="5"
                        SnapsToDevicePixels="False">
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#1472e3" />
                            <Setter TargetName="Border" Property="Background" Value="#1472e3" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BrandSolidColorBrush}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BrandSolidColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#5a5a5a" />
                            <Setter TargetName="Border" Property="DropShadowEffect.Color" Value="#5a5a5a" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="DefaultWhiteButton"
        BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
        TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="{DynamicResource BrandSolidColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="#efefef"
                        BorderThickness="0"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="1"
                                ShadowDepth="1"
                                Color="White" />
                        </Border.Effect>
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                            <Setter TargetName="Border" Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="White" />
                            <Setter TargetName="Border" Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#5a5a5a" />
                            <Setter TargetName="Border" Property="DropShadowEffect.Color" Value="#5a5a5a" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="LogoutButton"
        BasedOn="{StaticResource Pattern}"
        TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom">
                            <Path Data="M 0 1.77778 C 0 0.8 0.799822 0 1.77738 0 H 8.88691 V 1.77778 H 1.77738 V 14.2222 H 8.88691 V 16 H 1.77738 C 0.799822 16 0 15.2 0 14.2222 V 1.77778 Z M 12.5981 7.11111 L 10.3444 4.85689 L 11.601 3.6 L 16 8 L 11.601 12.4 L 10.3444 11.1431 L 12.5981 8.88889 H 6.74517 V 7.11111 H 12.5981 Z" Fill="White" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="IconicButton"
        BasedOn="{StaticResource Pattern}"
        TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Toggle Button  -->
    <Style x:Key="EllipseToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Background="Transparent">
                        <Grid>
                            <Ellipse
                                x:Name="ellipse"
                                Width="15"
                                Height="15"
                                HorizontalAlignment="Right"
                                Stroke="White"
                                StrokeThickness="2" />
                            <Border
                                x:Name="rect"
                                Width="10.5"
                                Height="9"
                                HorizontalAlignment="Left"
                                Background="White"
                                CornerRadius="3,0,0,3" />
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ellipse" Property="Ellipse.Stroke" Value="{StaticResource BrandSolidColorBrush}" />
                            <Setter TargetName="ellipse" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="rect" Property="Border.Background" Value="{StaticResource BrandSolidColorBrush}" />
                            <Setter TargetName="rect" Property="Border.CornerRadius" Value="0,3,3,0" />
                            <Setter TargetName="rect" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="IconicToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style
        x:Key="DefaultCloseButton"
        BasedOn="{StaticResource Pattern}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        BorderThickness="1"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#232527" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#272727" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Default Radio Button  -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border>
                        <StackPanel Orientation="Horizontal">
                            <Ellipse
                                x:Name="RadioButton"
                                Width="20"
                                Height="20"
                                Margin="2,3,10,0"
                                HorizontalAlignment="Left"
                                Fill="#505050"
                                SnapsToDevicePixels="False"
                                Stroke="#131313"
                                StrokeThickness="1" />
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="RadioButton" Property="Stroke" Value="{DynamicResource BrandSolidColorBrush}" />
                            <Setter TargetName="RadioButton" Property="StrokeThickness" Value="6" />
                            <Setter TargetName="RadioButton" Property="Fill" Value="#EDEDED" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="DefaultTestButton"
        BasedOn="{StaticResource Pattern}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        BorderBrush="White"
                        BorderThickness="1"
                        CornerRadius="5">
                        <ContentPresenter
                            Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>