<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="GridScrollBar" Width="7">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="7" />
                            <RowDefinition />
                            <RowDefinition MaxHeight="7" />
                        </Grid.RowDefinitions>
                        <RepeatButton
                            x:Name="PageUpButton"
                            Grid.Row="0"
                            Command="ScrollBar.LineUpCommand"
                            Style="{DynamicResource RepeatButtonArrowStyle}" />
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="True"
                            Orientation="Vertical">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ThumbStyle}" />
                            </Track.Thumb>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    x:Name="DecreaseRepeatButton"
                                    Command="ScrollBar.PageUpCommand"
                                    Style="{DynamicResource RepeatButtonPageStyle}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    x:Name="IncreaseRepeatButton"
                                    Command="ScrollBar.PageDownCommand"
                                    Style="{DynamicResource RepeatButtonPageStyle}" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton
                            x:Name="PageDownButton"
                            Grid.Row="2"
                            Command="ScrollBar.LineDownCommand"
                            Style="{DynamicResource RepeatButtonArrowStyle}">
                            <RepeatButton.LayoutTransform>
                                <RotateTransform Angle="180" />
                            </RepeatButton.LayoutTransform>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                            <Setter TargetName="GridScrollBar" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />
                            <Setter TargetName="IncreaseRepeatButton" Property="Command" Value="ScrollBar.LineRightCommand" />
                            <Setter TargetName="DecreaseRepeatButton" Property="Command" Value="ScrollBar.LineLeftCommand" />
                            <Setter TargetName="PageDownButton" Property="Command" Value="ScrollBar.PageRightCommand" />
                            <Setter TargetName="PageUpButton" Property="Command" Value="ScrollBar.PageLeftCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Repeat button style  -->
    <Style
        x:Key="RepeatButtonArrowStyle"
        BasedOn="{x:Null}"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="Height" Value="10" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="RepeatButtonArrowBorder" Background="#1f202a" />
                        <Polygon
                            x:Name="RepeatButtonArrow"
                            Fill="#1f202a"
                            Points="2,9 11,9 6.5,4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource MouseOverBrush}" />
                            <Setter TargetName="RepeatButtonArrowBorder" Property="Background" Value="{StaticResource DarkDarkBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="RepeatButtonArrowBorder" Property="Background" Value="#FFD2D2D2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource BorderBrush}" />
                            <Setter TargetName="RepeatButtonArrow" Property="Opacity" Value="0.72" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Page repeat button style  -->
    <Style x:Key="RepeatButtonPageStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <!--  Scroll bar space  -->
                    <Border Background="{StaticResource DarkDarkBackgroundBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Thumb style  -->
    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{StaticResource DarkDarkBackgroundBrush}">
                        <Rectangle
                            x:Name="ThumbRect"
                            MaxWidth="13"
                            Fill="#17171c"
                            RadiusX="4"
                            RadiusY="4" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbRect" Property="Fill" Value="{StaticResource MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ThumbRect" Property="Opacity" Value="0.72" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontFamily" Value="{StaticResource FuturaBookC}" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator VerticalAlignment="Center" Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid
                                Width="15"
                                Height="15"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center">
                                <Border
                                    x:Name="Border"
                                    Background="Transparent"
                                    BorderBrush="#167FFC"
                                    BorderThickness="2.5">
                                    <Path
                                        x:Name="CheckMark"
                                        Width="7"
                                        Height="7"
                                        Data="M 0 0 L 7 7 M 0 7 L 7 0"
                                        SnapsToDevicePixels="False"
                                        StrokeThickness="2"
                                        Visibility="Collapsed">
                                        <Path.Stroke>
                                            <SolidColorBrush Color="White" />
                                        </Path.Stroke>
                                    </Path>
                                </Border>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomTipTool" TargetType="{x:Type ToolTip}">
        <Setter Property="Placement" Value="Relative" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource CasperBold}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
    </Style>
</ResourceDictionary>