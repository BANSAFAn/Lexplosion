<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Lexplosion">

    <SolidColorBrush x:Key="BackgroundBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="DarkBackgroundBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="DarkDarkBackgroundBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="PressedBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="MouseOverBrush" Color="#383838"/>
    <SolidColorBrush x:Key="BorderBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="ShadowBorderBrush1" Color="#1f202a"/>
    <SolidColorBrush x:Key="ShadowBorderBrush2" Color="#1f202a"/>
    <SolidColorBrush x:Key="DarkDarkForegroundBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="DarkForegroundBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="#1f202a"/>
    <!-- Scroll Bar -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="GridScrollBar" Width="7">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="7"/>
                            <RowDefinition/>
                            <RowDefinition MaxHeight="7"/>
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="PageUpButton" Grid.Row="0" Command="ScrollBar.LineUpCommand" 
                                      Style="{DynamicResource RepeatButtonArrowStyle}"/>
                        <Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ThumbStyle}"/>
                            </Track.Thumb>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="DecreaseRepeatButton" Command="ScrollBar.PageUpCommand" 
                                              Style="{DynamicResource RepeatButtonPageStyle}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="IncreaseRepeatButton" Command="ScrollBar.PageDownCommand" 
                                              Style="{DynamicResource RepeatButtonPageStyle}"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton x:Name="PageDownButton" Grid.Row="2" Command="ScrollBar.LineDownCommand" 
                                          Style="{DynamicResource RepeatButtonArrowStyle}">
                            <RepeatButton.LayoutTransform>
                                <RotateTransform Angle="180"/>
                            </RepeatButton.LayoutTransform>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                            <Setter Property="LayoutTransform" TargetName="GridScrollBar">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeatButton"/>
                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeatButton"/>
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageDownButton"/>
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageUpButton"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Repeat button style -->
    <Style x:Key="RepeatButtonArrowStyle" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Height" Value="10"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="RepeatButtonArrowBorder" Background="#1f202a"/>
                        <Polygon x:Name="RepeatButtonArrow" Fill="#1f202a" Points="2,9 11,9 6.5,4"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource MouseOverBrush}"/>
                            <Setter TargetName="RepeatButtonArrowBorder" Property="Background" 
                                    Value="{StaticResource DarkDarkBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource PressedBrush}"/>
                            <Setter TargetName="RepeatButtonArrowBorder" Property="Background" Value="#FFD2D2D2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource BorderBrush}"/>
                            <Setter TargetName="RepeatButtonArrow" Property="Opacity" Value="0.72"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Page repeat button style -->
    <Style x:Key="RepeatButtonPageStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <!-- Scroll bar space -->
                    <Border Background="{StaticResource DarkDarkBackgroundBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Thumb style -->
    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{StaticResource DarkDarkBackgroundBrush}">
                        <Rectangle x:Name="ThumbRect" RadiusX="4" RadiusY="4" Fill="#17171c" MaxWidth="13"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbRect" Property="Fill" Value="{StaticResource MouseOverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ThumbRect" Property="Opacity" Value="0.72"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MWCBS1" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="246" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Background" Value="#18191b" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" Background="#18191b" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Width="244"  HorizontalAlignment="Left">
                        <Grid ShowGridLines="False" Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0">
                                <Canvas x:Name="BorderButton" Width="10" Height="60" Background="Transparent" VerticalAlignment="Center"/>
                            </Border>
                            <Border Grid.Column="1">
                                <ContentPresenter x:Name="Content" Margin="25,0,25,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                RecognizesAccessKey="True">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Control.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard TargetProperty="Background" TargetName="Border">
                                    <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#1A1B1D" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Control.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard TargetProperty="Background" TargetName="Border">
                                    <ColorAnimation Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#18191b" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--Trigger Property="IsMouseOver" Value="True">

                            <Setter TargetName="Border" Property="Background" Value="#1A1B1D"/>
                        </Trigger-->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="BorderButton" Property="Height" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="#167FFC" />
                            <Setter TargetName="BorderButton" Property="Background" Value="#167FFC" />
                        </Trigger>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard TargetProperty="Height" TargetName="BorderButton">
                                    <DoubleAnimation From="0" To="60" Duration="0:0:0.34" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Start Button Style -->
    <Style x:Key="CBS" TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="FontFamily" Value="pack://application:,,,/assets/fonts/#Casper Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" CornerRadius="2" BorderThickness="1" Background="#1c91a6" BorderBrush="#2c99c2">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#1c91a6" />
                            <Setter TargetName="Border" Property="Background" Value="#2c99c2"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#1c91a6" />
                            <Setter TargetName="Border" Property="Background" Value="#2c99c2"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Switcher Style -->
    <Style x:Key="MWCBS" TargetType="{x:Type ToggleButton}">
        <!-- <Setter Property="" Value=""/> #4cb2d6-->
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="WhiteSmoke"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" Background="Transparent" BorderBrush="#18191b"  BorderThickness="0,0,0,3" Width="140"  HorizontalAlignment="Center">
                        <ContentPresenter Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                RecognizesAccessKey="True" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="#2c99c2"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tags -->
    <Style x:Key="TagStyle" TargetType="Button">
        <Setter Property="Height" Value="25" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="2,0,2,0" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="#5a5c61" CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True" Margin="10,0,10,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InstanceMoreButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <Grid>
                            <Border x:Name="BKG" Background="{TemplateBinding Background}" />
                            <TextBlock x:Name="Text" Text="More" Foreground="White" FontWeight="Bold" FontSize="22" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="Text" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BKG" Property="Effect">
                                <Setter.Value>
                                    <BlurEffect />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Text" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- DropDownMenu -->
    <Style x:Key="CDDMS" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Path x:Name="Arrow"
                                Stretch="Fill"
                                Width="16" 
                                Height="16"                                
                                Stroke="#fff"
                                StrokeThickness="1" 
                                RenderTransformOrigin="0.5,0.5">
                        </Path>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Arrow" Property="Data" Value="M 10.5 15.188 v 5.625 A 1.687 1.687 0 0 1 8.812 22.5 H 1.688 A 1.687 1.687 0 0 1 0 20.813 V 15.188 A 1.687 1.687 0 0 1 1.688 13.5 H 8.812 A 1.687 1.687 0 0 1 10.5 15.188 Z M 0 26.438 v 5.625 A 1.687 1.687 0 0 0 1.688 33.75 H 8.812 A 1.687 1.687 0 0 0 10.5 32.063 V 26.438 A 1.687 1.687 0 0 0 8.812 24.75 H 1.688 A 1.687 1.687 0 0 0 0 26.438 Z M 8.812 2.25 H 1.688 A 1.687 1.687 0 0 0 0 3.938 V 9.563 A 1.687 1.687 0 0 0 1.688 11.25 H 8.812 A 1.687 1.687 0 0 0 10.5 9.563 V 3.938 A 1.687 1.687 0 0 0 8.812 2.25 Z m 5.625 31.5 H 34.313 A 1.687 1.687 0 0 0 36 32.063 V 26.438 a 1.687 1.687 0 0 0 -1.687 -1.687 H 14.437 a 1.687 1.687 0 0 0 -1.687 1.688 v 5.625 A 1.687 1.687 0 0 0 14.437 33.75 Z M 12.75 3.938 V 9.563 a 1.687 1.687 0 0 0 1.688 1.688 H 34.313 A 1.687 1.687 0 0 0 36 9.563 V 3.938 A 1.687 1.687 0 0 0 34.313 2.25 H 14.437 A 1.687 1.687 0 0 0 12.75 3.938 Z M 14.437 22.5 H 34.313 A 1.687 1.687 0 0 0 36 20.813 V 15.188 A 1.687 1.687 0 0 0 34.313 13.5 H 14.437 a 1.687 1.687 0 0 0 -1.687 1.688 v 5.625 A 1.687 1.687 0 0 0 14.437 22.5 Z"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Arrow" Property="Data" Value="M 10.5 15.188 v 5.625 A 1.687 1.687 0 0 1 8.812 22.5 H 1.688 A 1.687 1.687 0 0 1 0 20.813 V 15.188 A 1.687 1.687 0 0 1 1.688 13.5 H 8.812 A 1.687 1.687 0 0 1 10.5 15.188 Z M 0 26.438 v 5.625 A 1.687 1.687 0 0 0 1.688 33.75 H 8.812 A 1.687 1.687 0 0 0 10.5 32.063 V 26.438 A 1.687 1.687 0 0 0 8.812 24.75 H 1.688 A 1.687 1.687 0 0 0 0 26.438 Z M 8.812 2.25 H 1.688 A 1.687 1.687 0 0 0 0 3.938 V 9.563 A 1.687 1.687 0 0 0 1.688 11.25 H 8.812 A 1.687 1.687 0 0 0 10.5 9.563 V 3.938 A 1.687 1.687 0 0 0 8.812 2.25 Z m 5.625 31.5 H 34.313 A 1.687 1.687 0 0 0 36 32.063 V 26.438 a 1.687 1.687 0 0 0 -1.687 -1.687 H 14.437 a 1.687 1.687 0 0 0 -1.687 1.688 v 5.625 A 1.687 1.687 0 0 0 14.437 33.75 Z M 12.75 3.938 V 9.563 a 1.687 1.687 0 0 0 1.688 1.688 H 34.313 A 1.687 1.687 0 0 0 36 9.563 V 3.938 A 1.687 1.687 0 0 0 34.313 2.25 H 14.437 A 1.687 1.687 0 0 0 12.75 3.938 Z M 14.437 22.5 H 34.313 A 1.687 1.687 0 0 0 36 20.813 V 15.188 A 1.687 1.687 0 0 0 34.313 13.5 H 14.437 a 1.687 1.687 0 0 0 -1.687 1.688 v 5.625 A 1.687 1.687 0 0 0 14.437 22.5 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Setting Button Style 1-->
    <Style x:Key="TSB" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" CornerRadius="2" BorderThickness="0"   Background="Transparent">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CBSS" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="24"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" CornerRadius="0" BorderBrush="Transparent" Background="Transparent">
                        <ContentPresenter HorizontalAlignment="Center"  RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>