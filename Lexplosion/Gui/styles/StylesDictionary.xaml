<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Lexplosion">

    <SolidColorBrush x:Key="BackgroundBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="DarkBackgroundBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="DarkDarkBackgroundBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="PressedBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="MouseOverBrush" Color="#383838"/>
    <SolidColorBrush x:Key="BorderBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="ShadowBorderBrush1" Color="#1f202a"/>
    <SolidColorBrush x:Key="ShadowBorderBrush2" Color="#1f202a"/>
    <SolidColorBrush x:Key="DarkDarkForegroundBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="DarkForegroundBrush" Color="#1f202a"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="#1f202a"/>
    <!-- Scroll Bar -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="GridScrollBar" Width="7">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="7"/>
                            <RowDefinition/>
                            <RowDefinition MaxHeight="7"/>
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="PageUpButton" Grid.Row="0" Command="ScrollBar.LineUpCommand" 
                                      Style="{DynamicResource RepeatButtonArrowStyle}"/>
                        <Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ThumbStyle}"/>
                            </Track.Thumb>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="DecreaseRepeatButton" Command="ScrollBar.PageUpCommand" 
                                              Style="{DynamicResource RepeatButtonPageStyle}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="IncreaseRepeatButton" Command="ScrollBar.PageDownCommand" 
                                              Style="{DynamicResource RepeatButtonPageStyle}"/>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton x:Name="PageDownButton" Grid.Row="2" Command="ScrollBar.LineDownCommand" 
                                          Style="{DynamicResource RepeatButtonArrowStyle}">
                            <RepeatButton.LayoutTransform>
                                <RotateTransform Angle="180"/>
                            </RepeatButton.LayoutTransform>
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                            <Setter Property="LayoutTransform" TargetName="GridScrollBar">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeatButton"/>
                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeatButton"/>
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageDownButton"/>
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageUpButton"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Repeat button style -->
    <Style x:Key="RepeatButtonArrowStyle" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Height" Value="10"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="RepeatButtonArrowBorder" Background="#1f202a"/>
                        <Polygon x:Name="RepeatButtonArrow" Fill="#1f202a" Points="2,9 11,9 6.5,4"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource MouseOverBrush}"/>
                            <Setter TargetName="RepeatButtonArrowBorder" Property="Background" 
                                    Value="{StaticResource DarkDarkBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource PressedBrush}"/>
                            <Setter TargetName="RepeatButtonArrowBorder" Property="Background" Value="#FFD2D2D2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource BorderBrush}"/>
                            <Setter TargetName="RepeatButtonArrow" Property="Opacity" Value="0.72"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Page repeat button style -->
    <Style x:Key="RepeatButtonPageStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{StaticResource DarkDarkBackgroundBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Thumb style -->
    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{StaticResource DarkDarkBackgroundBrush}">
                        <Rectangle x:Name="ThumbRect" RadiusX="4" RadiusY="4" Fill="#1f202a" MaxWidth="13"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ThumbRect" Property="Fill" Value="{StaticResource MouseOverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ThumbRect" Property="Opacity" Value="0.72"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Scroll Bar-->
    
    <Style x:Key="MWCBS1" TargetType="{x:Type ToggleButton}">
        <!-- <Setter Property="" Value=""/> #4cb2d6-->
        <Setter Property="Width" Value="244" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="10,0,0,0" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Width="244"  HorizontalAlignment="Left">
                        <ContentPresenter x:Name="Content" Margin="25,0,25,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <!-- 
                            Colors:
                            #595BD4 
                            #167FFC
                            #FD3259
                            #23DCF9
                            -->
                            <Setter Property="BorderBrush" TargetName="Border" Value="#167FFC" />
                            <Setter Property="BorderThickness" TargetName="Border" Value="10,0,0,0" />
                            <Setter Property="Foreground" Value="#167FFC" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter TargetName="Content" Property="Margin" Value="18, 0, 18, 0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Start Button Style -->
    <Style x:Key="CBS" TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="FontFamily" Value="pack://application:,,,/assets/fonts/#Casper Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" CornerRadius="2" BorderThickness="1" Background="#1c91a6" BorderBrush="#2c99c2">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#1c91a6" />
                            <Setter TargetName="Border" Property="Background" Value="#2c99c2"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#1c91a6" />
                            <Setter TargetName="Border" Property="Background" Value="#2c99c2"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Switcher Style -->
    <Style x:Key="MWCBS" TargetType="{x:Type ToggleButton}">
        <!-- <Setter Property="" Value=""/> #4cb2d6-->
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" Background="Transparent" BorderBrush="#18191b"  BorderThickness="0,0,0,3" Width="140"  HorizontalAlignment="Center">
                        <ContentPresenter Margin="5,0,5,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                RecognizesAccessKey="True" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="#2c99c2"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tags -->
    <Style x:Key="TagStyle" TargetType="Button">
        <Setter Property="Height" Value="25" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="2,0,2,0" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="#5a5c61" CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" RecognizesAccessKey="True" Margin="10,0,10,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Instance Donwload Button-->
    <Style x:Key="InstanceDonwloadButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="InstanceDownloadButtonBorder" Background="Transparent">
                        <Path x:Name="DownloadPath" Stretch="Fill" Fill="White" Stroke="White" Width="20" Height="20"
                              Data="M 50.625 0 h 18.75 A 5.612 5.612 0 0 1 75 5.625 V 45 H 95.555 a 4.679 4.679 0 0 1 3.3 7.992 L 63.211 88.664 a 4.541 4.541 0 0 1 -6.4 0 l -35.7 -35.672 A 4.679 4.679 0 0 1 24.422 45 H 45 V 5.625 A 5.612 5.612 0 0 1 50.625 0 Z M 120 88.125 v 26.25 A 5.612 5.612 0 0 1 114.375 120 H 5.625 A 5.612 5.612 0 0 1 0 114.375 V 88.125 A 5.612 5.612 0 0 1 5.625 82.5 H 40.008 L 51.492 93.984 a 12.01 12.01 0 0 0 17.016 0 L 79.992 82.5 h 34.383 A 5.612 5.612 0 0 1 120 88.125 Z M 90.938 108.75 a 4.688 4.688 0 1 0 -4.687 4.688 A 4.7 4.7 0 0 0 90.938 108.75 Z m 15 0 a 4.688 4.688 0 1 0 -4.687 4.688 A 4.7 4.7 0 0 0 105.938 108.75 Z"                              />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="InstanceDownloadButtonBorder" Property="Background" Value="#151719" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InstanceDownloadButtonBorder" Property="Background" Value="#2c99c2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Instance Donwload Button-->
    <Style x:Key="InstanceExportButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="InstanceExportButtonBorder" Background="Transparent">
                        <Path x:Name="ExportPath" Stretch="Fill" Fill="White" Stroke="White" Width="18" Height="24"
                              Data="M 19.635 4.922 L 14.536 0.328 A 1.323 1.323 0 0 0 13.651 0 h -0.318 V 6 H 20 V 5.714 A 1.068 1.068 0 0 0 19.635 4.922 Z M 6.687 15.75 C 5.755 15.75 5 16.317 5 17.016 s 0.76 1.266 1.693 1.266 s 1.687 -0.567 1.687 -1.266 S 7.62 15.75 6.687 15.75 Z m 4.979 -9.375 V 0 H 8.354 V 1.5 H 6.687 V 0 H 1.25 A 1.19 1.19 0 0 0 0 1.125 v 21.75 A 1.19 1.19 0 0 0 1.25 24 h 17.5 A 1.19 1.19 0 0 0 20 22.875 V 7.5 H 12.917 A 1.2 1.2 0 0 1 11.667 6.375 Z M 4.995 1.5 H 6.661 V 3 H 4.995 Z m 1.682 18 A 2.543 2.543 0 0 1 4 16.552 L 5.021 12 V 10.5 H 6.687 V 9 H 5.021 V 7.5 H 6.687 V 6 H 5.021 V 4.5 H 6.687 V 3 H 8.354 V 4.5 H 6.687 V 6 H 8.354 V 7.5 H 6.687 V 9 H 8.354 v 1.5 H 6.687 V 12 H 7.839 a 0.617 0.617 0 0 1 0.615 0.455 l 0.9 4.111 A 2.544 2.544 0 0 1 6.677 19.5 Z"                              />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="InstanceExportButtonBorder" Property="Background" Value="#151719" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InstanceExportButtonBorder" Property="Background" Value="#2c99c2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>  
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>