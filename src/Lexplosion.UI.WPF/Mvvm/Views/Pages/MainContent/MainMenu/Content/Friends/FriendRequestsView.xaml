<UserControl
    x:Class="Lexplosion.UI.WPF.Mvvm.Views.Pages.MainContent.MainMenu.FriendsRequestsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:auth="clr-namespace:Lexplosion.UI.WPF.Mvvm.Views.Pages.Authorization"
    xmlns:controls="clr-namespace:Lexplosion.UI.WPF.Controls"
    xmlns:converters="clr-namespace:Lexplosion.UI.WPF.Core.Converters"
    xmlns:core="clr-namespace:Lexplosion.UI.WPF.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:Lexplosion.UI.WPF.Extensions"
    xmlns:lexplosion="clr-namespace:Lexplosion;assembly=Lexplosion.Core"
    xmlns:local="clr-namespace:Lexplosion.UI.WPF.Mvvm.Views.Pages.MainContent.MainMenu"
    xmlns:mainmenu="clr-namespace:Lexplosion.UI.WPF.Mvvm.ViewModels.MainContent.MainMenu"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:objects="clr-namespace:Lexplosion.UI.WPF.Core.Objects"
    xmlns:userComponents="clr-namespace:Lexplosion.UI.WPF.ViewComponents.Users"
    xmlns:users="clr-namespace:Lexplosion.UI.WPF.Core.Objects.Users"
    d:DataContext="{d:DesignInstance Type=mainmenu:FriendRequestsViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>

        <core:BindingProxy x:Key="ViewModel" Data="{Binding}" />

        <Style x:Key="EveryEvenUser" TargetType="{x:Type FrameworkElement}">
            <Setter Property="Margin" Value="4,0,0,0" />
        </Style>

        <DataTemplate x:Key="PendingRequestUser" DataType="{x:Type users:NightWorldUserRequest}">
            <userComponents:PendingRequestUser
                Margin="0,0,4,4"
                Avatar="{Binding AvatarUrl}"
                Banner="{Binding Banner}"
                DataContext="{Binding}"
                Nickname="{Binding Login}"
                RunningClientName="{Binding RunningClientName}"
                Status="{Binding Status.Value}"
                ViewModelDataContext="{Binding Data, Source={StaticResource ViewModel}}" />
        </DataTemplate>

        <DataTemplate x:Key="OutgoingRequestUser" DataType="{x:Type users:NightWorldUserRequest}">
            <userComponents:OutgoingRequestUser
                Margin="0,0,4,4"
                Avatar="{Binding AvatarUrl}"
                Banner="{Binding Banner}"
                DataContext="{Binding}"
                Nickname="{Binding Login}"
                RunningClientName="{Binding RunningClientNsame}"
                Status="{Binding Status.Value}"
                ViewModelDataContext="{Binding Data, Source={StaticResource ViewModel}}" />
        </DataTemplate>

        <Style x:Key="SegmentedListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource SecondaryForegroundSolidColorBrush}" />
            <Setter Property="Padding" Value="11,0" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border
                            x:Name="border"
                            Height="{TemplateBinding Height}"
                            MinHeight="22"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter
                                x:Name="content"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FocusVisualStyle="{x:Null}" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource ActivitySolidColorBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource DefaultButtonForegroundColorBrush}" />
                                <Setter Property="TextBlock.Foreground" Value="{DynamicResource DefaultButtonForegroundColorBrush}" />
                                <Setter TargetName="border" Property="CornerRadius" Value="2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SegmentedListBox" TargetType="{x:Type ListBox}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Background" Value="{DynamicResource PrimarySolidColorBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource SeparateSolidColorBrush}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource SegmentedListBoxItem}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border
                            x:Name="border"
                            Height="{TemplateBinding Height}"
                            MinHeight="22"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="5">
                            <ScrollViewer
                                Margin="0"
                                Focusable="false"
                                VerticalScrollBarVisibility="Disabled">
                                <StackPanel IsItemsHost="True" Orientation="Horizontal" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid
        Margin="32,8"
        Background="Transparent"
        ShowGridLines="False">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid HorizontalAlignment="Stretch" Background="Transparent">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ListBox
                x:Name="segmented"
                SelectedIndex="0"
                Style="{StaticResource SegmentedListBox}">

                <core:SegmentItem Value="Pending">
                    <TextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Text="{DynamicResource Pending}" />
                </core:SegmentItem>

                <core:SegmentItem Value="Outgoing">
                    <TextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Text="{DynamicResource Outgoing}" />
                </core:SegmentItem>

            </ListBox>

            <controls:SearchBox
                Grid.Column="1"
                Margin="16,8"
                Placeholder="{DynamicResource TypingNicknamePlaceholder}"
                Style="{StaticResource sm-searchbox-default}"
                Text="{Binding Model.SearchBoxText, UpdateSourceTrigger=PropertyChanged}" />

        </Grid>

        <core:Switch
            Grid.Row="1"
            Margin="0,0,-32,0"
            VerticalAlignment="Stretch"
            FocusVisualStyle="{x:Null}"
            SelectedExpression="{Binding SelectedItem.Value, ElementName=segmented}">
            <core:Switch.Cases>

                <core:SwitchCaseItem Key="Pending">
                    <Grid>
                        <controls:Empty
                            Grid.Row="1"
                            CollectionCount="{Binding Model.Incoming.Count}"
                            Description="{DynamicResource ThereAreNoIncomingFriendRequests}" />

                        <ListBox
                            Grid.Row="1"
                            HorizontalAlignment="Stretch"
                            AlternationCount="3"
                            ItemTemplate="{StaticResource PendingRequestUser}"
                            ItemsSource="{Binding Model.Incoming}"
                            Style="{StaticResource TransparentListBox}">

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel
                                        HorizontalAlignment="Left"
                                        IsItemsHost="True"
                                        VirtualizingPanel.IsVirtualizing="True" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                        </ListBox>
                    </Grid>
                </core:SwitchCaseItem>

                <core:SwitchCaseItem Key="Outgoing">
                    <Grid>
                        <controls:Empty
                            Grid.Row="1"
                            CollectionCount="{Binding Model.Outgoing.Count}"
                            Description="{DynamicResource ThereAreNoOutgoingFriendRequests}" />

                        <ListBox
                            Grid.Row="1"
                            HorizontalAlignment="Stretch"
                            ItemTemplate="{StaticResource OutgoingRequestUser}"
                            ItemsSource="{Binding Model.Outgoing}"
                            SizeChanged="ItemsControl_SizeChanged"
                            Style="{StaticResource TransparentListBox}">

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel
                                        HorizontalAlignment="Left"
                                        IsItemsHost="True"
                                        VirtualizingPanel.IsVirtualizing="True" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </Grid>
                </core:SwitchCaseItem>

            </core:Switch.Cases>
        </core:Switch>
    </Grid>
</UserControl>
